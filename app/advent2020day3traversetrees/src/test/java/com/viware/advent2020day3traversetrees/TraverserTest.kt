package com.viware.advent2020day3traversetrees

import org.junit.Assert.*

import org.junit.After
import org.junit.Before
import org.junit.Test

class TraverserTest {

    lateinit var treeLocations:List<String>

    @Before
    fun setUp() {
        treeLocations=listOf(
            "....##..#........##...#.#..#.##",
            ".#.#..#....##....#...#..##.....",
            "##.#..##..#...#..........##.#..",
            ".#.##.####..#......###.........",
            "#.#.#...........#.....#...#....",
            "#.......#....#.#.##..###..##..#",
            ".#...#...##....#.........#.....",
            "..........##.#.#.....#....#.#..",
            ".......##..##...#.#.#...#......",
            ".#.#.#...#...##...#.##.##..#...",
            "........##.#.#.###.........##..",
            "#.#..#.#.#.....#...#...#......#",
            ".#.#.#...##......#...#.........",
            ".#..##.##.#...#...##....#.#....",
            ".##...#..#..#......##.###....##",
            ".....#...#.###.....#.#.........",
            "#.##..#....#.#.#.#.............",
            "........#...#......#...#..#....",
            "##..##...##.##...#...#.###...##",
            "#.#....##.#...###......#..#.#..",
            "..#.....#.##......#..........#.",
            "#.......#..#......#.....#....#.",
            ".....###...........#....#.##...",
            "#.#........##.......#.#...#.##.",
            ".#.#.#........#........#.#.....",
            "#..#..##.....#.###..#.#.#.##..#",
            "..#.#...#..##.#.#.#.......###..",
            "........#........#..#..#...#...",
            "##............#...#..##.##...#.",
            "#....#.#.....##...#............",
            "............#...#..#.#.#....#..",
            "#.#.#...##.##.#....#....#......",
            "................###.....#.....#",
            "##.#####.#..#...###..#...###...",
            "...#.....#...#.#....#...#..#...",
            ".......#....##.##.#.##.........",
            "..#..#..##.....#...#.#.....#...",
            "...#...#.#.##.#..###.......#...",
            "...#...........#.#####..##..#..",
            "#.#...#........####..#......#.#",
            "#..#.##...........#.#......#.##",
            "#.#..#....##..#..##.#..........",
            ".....#..#.....#........##..#...",
            "...###.......#.##.......#......",
            "...##..#..#...#....#.###...#...",
            "....####....#........#.##.#.#.#",
            "#....#.....#.###.##...##..##.##",
            ".##.#...#.##.#......#..##.#....",
            "...#.............#.............",
            "..##..##.#.....#........##....#",
            "#.....#....#.......####...#..#.",
            "..#...#..#...#...##.#....##....",
            ".#...##....#....#..#....#......",
            "##..#.#...##......#..#.......##",
            "..#...#.##..#.....#.#...#..#.#.",
            "#..##....#..........#..........",
            ".#........#..#......#......#.#.",
            "...##.#.........#.#....#.#...#.",
            "#.....#.#..#...#...#..#...#...#",
            "#.........#.#.........##.......",
            ".#.......#......#.........###.."
        )

        /*
            "....##..#........##...#.#..#.##",
            ".#.X..#....##....#...#..##.....",
            "##.#..X#..#...#..........##.#..",
            ".#.##.###X..#......###.........",
            "#.#.#.......0...#.....#...#....",
            "#.......#....#.X.##..###..##..#",
            ".#...#...##....#..0......#.....",
            "..........##.#.#.....X....#.#..",
            ".......##..##...#.#.#...X......"'
            ".#.#.#...#...##...#.##.##..X..."'
            "........##.#.#.###.........##.0"'
            "#.0..#.#.#.....#...#...#......#"'
            ".#.#.X...##......#...#........."'
            ".#..##.#X.#...#...##....#.#...."'
            ".##...#..#.0#......##.###....##"'
            ".....#...#.###0....#.#........."'
            "#.##..#....#.#.#.X............."'
            "........#...#......#0..#..#...."'
            "##..##...##.##...#...#.X##...##"'
            "#.#....##.#...###......#..X.#.."'
            "..#.....#.##......#..........X."'
            "#0......#..#......#.....#....#."'
            "....0###...........#....#.##..."'
            "#.#....0...##.......#.#...#.##."'
            ".#.#.#....0...#........#.#....."'
            "#..#..##.....X.###..#.#.#.##..#"'
            "..#.#...#..##.#.X.#.......###.."'
            "........#........#.0#..#...#..."'
            "##............#...#..#X.##...#."'
            "#....#.#.....##...#......0....."'
            "............#...#..#.#.#....X.."'
            "X.#.#...##.##.#....#....#......"'
            "...0............###.....#.....#"'
            "##.###X#.#..#...###..#...###..."'
            "...#.....X...#.#....#...#..#..."'
            ".......#....X#.##.#.##........."'
            "..#..#..##.....X...#.#.....#..."'
            "...#...#.#.##.#..#X#.......#..."'
            "...#...........#.####X..##..#.."'
            "#.#...#........####..#..0...#.#"'
            "#..#.##...........#.#......X.##"'
            "#.#..#....##..#..##.#.........0"'
            "..0..#..#.....#........##..#..."'
            "...##X.......#.##.......#......"'
            "...##..#0.#...#....#.###...#..."'
            "....####...0#........#.##.#.#.#"'
            "#....#.....#.#X#.##...##..##.##"'
            ".##.#...#.##.#...0..#..##.#...."'
            "...#.............#..0.........."'
            "..##..##.#.....#.......0##....#"'
            "#.....#....#.......####...X..#."'
            "..#...#..#...#...##.#....##..0."'
            ".X...##....#....#..#....#......"'
            "##..X.#...##......#..#.......##"'
            "..#...#0##..#.....#.#...#..#.#."'
            "#..##....#0.........#.........."'
            ".#........#..X......#......#.#."'
            "...##.#.........X.#....#.#...#."'
            "#.....#.#..#...#...X..#...#...#"'
            "#.........#.#.........X#......."'
            ".#.......#......#........0###.."'
         */
    }

    @After
    fun tearDown() {
    }

    @Test
    fun testGetSlot() {
        assertTrue(MainActivity.Traverser(treeLocations).getSlot(0,0)=='.')
        assertFalse(MainActivity.Traverser(treeLocations).getSlot(0,0)=='#')
    }

    @Test
    fun getNumCols(){
        assertTrue(MainActivity.Traverser(treeLocations).getNumCols()==31)
        assertFalse(MainActivity.Traverser(treeLocations).getNumCols()==0)
    }

    @Test
    fun getNumTrees(){
        val numTrees=MainActivity.Traverser(treeLocations).getNumTrees()
        assertTrue(numTrees==35)
    }
}